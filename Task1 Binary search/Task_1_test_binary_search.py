# !/usr/bin/env python
# -- coding: utf-8 --
"""
@Filename:   Task_1_test_binary_search.py
@Date:       07.04.2024
@Time:       12:55
@Author:     Mentor
@Software:   PyCharm
"""
# Добавляем модуль для тестирования функции
import unittest
# Из нашего файла с функцией импортируем саму функцию для бинарного поиска
from Task_1_binary_search import binary_search


class BinarySearchTestCase(unittest.TestCase):
    """
    Класс для тестирования функции binary_search Task_1_binary_search.py
    (бинарный поиск элемента в отсортированном массиве)
    """

    def test_binary_search(self):
        """
        Тест-функция проверяет, как реализуется бинарный поиск
        в упорядоченном по возрастанию массиве целочисленных значений.

        Пример входных данных:
            1. Массив упорядоченных по возрастанию целочисленных значений
            2. Значения для выполнения функции бинарного поиска
        Пример выходных данных:
            index: номер элемента, значение которого совпадает с заданным знач.
        """
        # Пример списка для выполнения функции бинарного поиска
        test_list = [
            12, 13, 15, 19, 20, 22, 25, 26, 28, 33, 34, 38, 39, 40,
            43, 45, 67, 71, 83, 84, 85, 89, 91, 103, 129, 139, 141,
            189, 190, 199, 290, 291, 293, 789, 795, 797, 799, 947,
            969, 960, 1005, 1009, 2005, 2007, 6091, 20034, 70067
        ]

        # Пример значения для выполнения функции бинарного поиска
        test_value = 291

        # Задаем тест-функцию, реализующую бинарный поиск
        test_binary_search = binary_search(test_list, test_value)
        # Сравниваем результат работы алгоритма с выходным значением
        self.assertEqual(test_binary_search, 31)


# Проверка теста
if __name__ == '__main__':
    unittest.main()
